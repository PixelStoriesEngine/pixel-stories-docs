---
import type { Props } from "@astrojs/starlight/props";
import CallToAction from "@astrojs/starlight/components/CallToAction.astro";

const { hero } = Astro.props.entry.data;

const { data } = Astro.props.entry;
const { title = data.title, tagline, image, actions = [] } = data.hero || {};
---

{
  hero?.title && (
    <div class="hero">
      <div class="sl-flex stack">
        <div class="sl-flex copy">
          <h1 id="_top" data-page-title set:html={title} />
          {tagline && <div class="tagline" set:html={tagline} />}
        </div>
        {actions.length > 0 && (
          <div class="sl-flex actions">
            {actions.map(({ text, ...attrs }) => (
              <CallToAction {...attrs} set:html={text} />
            ))}
          </div>
        )}
      </div>
      <div class="hero-html">
        {/* <a
          href="https://app.pixelstories.io/embed/nCxTyr5YeB"
          target="_blank"
          rel="noopener noreferrer"
        >
        </a> */}
        <img
          class="rounded-xl not-content max-w-full "
          src="/ghost-buddies.png"
          alt="Happy ghosts"
        />
        {/* <a
          href="https://app.pixelstories.io/embed/nCxTyr5YeB"
          target="_blank"
          rel="noopener noreferrer"
          class="text-center font-mono no-underline hover:underline"
        >
          Play demo game
        </a> */}
      </div>
    </div>
  )
}

<style>
  .hero {
    display: grid;
    align-items: center;
    gap: 1rem;
    padding-bottom: 1rem;
  }

  .hero > img,
  .hero > .hero-html {
    object-fit: contain;
    width: min(70%, 50rem);
    height: auto;
    margin-inline: auto;
  }

  .stack {
    flex-direction: column;
    gap: clamp(1.5rem, calc(1.5rem + 1vw), 2rem);
    text-align: center;
  }

  .copy {
    flex-direction: column;
    gap: 1rem;
    align-items: center;
  }

  .copy > * {
    max-width: 50ch;
  }

  h1 {
    font-size: clamp(
      var(--sl-text-3xl),
      calc(0.25rem + 5vw),
      var(--sl-text-6xl)
    );
    line-height: var(--sl-line-height-headings);
    font-weight: 600;
    color: var(--sl-color-white);
  }

  .tagline {
    font-size: clamp(
      var(--sl-text-base),
      calc(0.0625rem + 2vw),
      var(--sl-text-xl)
    );
    color: var(--sl-color-gray-2);
  }

  .actions {
    gap: 1rem 2rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  @media (min-width: 50rem) {
    .hero {
      grid-template-columns: 7fr 5fr;
      gap: 3%;
      padding-block: clamp(2.5rem, calc(1rem + 10vmin), 25rem);
    }

    .hero > img,
    .hero > .hero-html {
      order: 2;
      width: min(100%, 35rem);
    }

    .stack {
      text-align: start;
    }

    .copy {
      align-items: flex-start;
    }

    .actions {
      justify-content: flex-start;
    }
  }
</style>
